@import '@Project/css/variables.scss';
@import '@Project/css/d3-tip.scss';

.chartSection {
    width: 100%;
    max-width: 650px;
    background-color: $lightest_gray;
    margin: 0;
    &.chartSection0 {
        margin: 0 auto 2em;
        background-color: #fff;
    }
    &.chartSection1 {
        & > table th[scope="row"], & > h2 {
            padding-left: 1.5rem;
        }
    }
    &.chartSection2 {
        & > table th[scope="row"], & > h2 {
            padding-left: 1.5rem;
        }
    }
    &.chartSection3 {
        & > table th[scope="row"], & > h2 {
            padding-left: 1.5rem;
        }
    }
    &:not(.chartSection0) th[scope="row"] button {
        left: 0;
    }
    h2 {
        text-align: center;
    }
    table {
        width: 100%;
        @media screen and (min-width: 400px){
            table-layout: fixed;
        }

    }
    tr {
        cursor: pointer;
        @media screen and (max-width: 399px){
            padding-top: 10px;
        }
    }
    th, td {
        padding: 0.625rem;
        background-color: inherit;
        border: none;
    }
    td {
        text-align: center;
        &.v  {
            color: darken($teal, 20%);
        }
        &.dv  {
            color: darken($orange, 10%);
        }
        &.ev  {
            color: $red;
        }
        &.childCell {
            display: none;
            padding: 0;
            border-bottom: 1px solid $dark_gray;
            &.isExpandedChild {
                display: table-cell;

            }
            h2 {
                position: sticky;
                top: 100px;
                text-align: left;
                font-size: 1rem;
                color: #fff;
                background-color: $dark_gray;
                padding-top: 0.625rem;
                padding-bottom: 0.625rem;
                margin: 0;
                z-index: 1;
                span {
                    color: $gray;
                    //position: absolute;
                    //right: 0.625rem;
                    font-weight: normal;
                }
            }
        }

    }
    th:not([scope="row"]), td {
        @media screen and (max-width: 399px) {
            padding-top: 1rem;   
        }
    }
    th[scope="row"] {
        border-top: 1px solid $gray;
        text-align: left;
        position: relative;
        @media screen and (max-width: 399px){
            /* working in Chrome and FF -- need to check others */
            display: block;
            position: relative;
            top: -9px;
            left: -10px;
            width: 0;
            white-space: nowrap;
            font-size: .85rem;
        }
    }
    tr:first-of-type th[scope="row"]{
        border-top-color: transparent;
    }
    th[scope="column"].sortedBy {
        &::after {
            content: ' \2193'; // up arrow
        }
        &.asc::after {
            content: ' \2191'; //down arrow
        }
        &.v::after  {
            color: darken($teal, 20%);
        }
        &.dv::after  {
            color: darken($orange, 10%);
        }
        &.ev::after  {
            color: $red;
        }
    }
    tbody tr:not(:last-of-type) {
        border-bottom: 1px solid $gray;
    }
}
.intro {
    text-align: center;
    width: 100%;
    max-width: 610px;
    margin: 0 auto;
    margin-bottom: 1em;
}
.sparkline, .circles circle {
    stroke: #000;
    stroke-width: 2.3px;   
    fill: none;
    &.v {
        stroke: darken($teal, 20%);
        &.isLast {
            fill: lighten($teal, 10%);
        }
    }
    &.dv {
        stroke: darken($orange, 10%);
        &.isLast {
            fill: lighten($orange, 10%);
        }
    }
    &.ev {
        stroke: $red;
        &.isLast {
            fill: lighten($red, 10%);
        }
    }
}

.units {
    color: $a11y;
    font-weight: normal;
}
.dataPoint {
    &.v {
        fill: darken($teal, 20%);
    }
    &.dv {
        fill: darken($orange, 10%);
    }
    &.ev {
        fill: $red;
    }
    @media screen and (max-width: 399px){
        font-size: 0.85rem;
    }
}

.dummyBars rect {
    fill: transparent;
}
.tooltipDiv {
    margin-bottom: 0.25em;
    color: $a11y;
}
.currentYear {
    font-weight: 900;
    color: $dark_gray;
    .v & {
        color: darken($teal, 20%);
    }
    .dv & {
        color: darken($orange, 10%);
    }
    .ev & {
        color: $red;
    }
}
.circles circle {
    fill: #fff;
}

.chartSVG {
    width: 100%;
    max-width: 85px;
    display: block;
    margin: 0 auto;
    overflow: visible !important;
}
.isExpanded > th button::before {
    content: 'â€“';
}
.expandButton {
    position: absolute;
    left: -15px;
    top: 0;
    appearance: none;
    width: 30px;
    height: 100%;
    border: none;
    background-color: transparent;
    &::before {
        content: '+';
        color: $a11y;
        position: absolute;
        left: 30%;
        top: 50%;
        transform-origin: 50% 50%;
        transform: translateY(-50%) scale(1);
        transition: color 0.2s ease-in-out, transform 0.2s ease-in-out;
    }
    tr:hover > th &::before {
        transform: translateY(-50%) scale(1.25);
        color: $pew_blue;
    }
}




